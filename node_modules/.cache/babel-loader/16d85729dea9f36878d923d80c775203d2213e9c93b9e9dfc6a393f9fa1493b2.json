{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prak Pengweb\\\\Gian Ivander_123140040_UTS\\\\src\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SearchForm from './components/SearchForm';\nimport DataTable from './components/DataTable';\nimport DetailCard from './components/DetailCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'd480045c';\nconst API_BASE = 'http://www.omdbapi.com/';\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [year, setYear] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm) return;\n    const url = `${API_BASE}?s=${encodeURIComponent(searchTerm)}&y=${year}&apikey=${API_KEY}&type=movie`;\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.Response === 'True') {\n      setMovies(data.Search);\n      setShowFavorites(false);\n    } else {\n      setMovies([]);\n    }\n  };\n  const fetchMovieDetails = async imdbID => {\n    const url = `${API_BASE}?i=${imdbID}&apikey=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    setSelectedMovie(data);\n  };\n  const toggleFavorite = movie => {\n    const isFavorite = favorites.some(fav => fav.imdbID === movie.imdbID);\n    if (isFavorite) {\n      setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n  const showFavoritesList = () => {\n    setMovies(favorites);\n    setShowFavorites(true);\n    setSelectedMovie(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onShowFavorites: showFavoritesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      year: year,\n      setYear: setYear,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      movies: movies,\n      fetchMovieDetails: fetchMovieDetails,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite,\n      isFavorites: showFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(DetailCard, {\n      movie: selectedMovie,\n      onClose: () => setSelectedMovie(null),\n      isFavorite: favorites.some(fav => fav.imdbID === selectedMovie.imdbID),\n      toggleFavorite: () => toggleFavorite(selectedMovie)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eBryX5+D4a/E7S0+oel8YFha6sc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchForm","DataTable","DetailCard","jsxDEV","_jsxDEV","API_KEY","API_BASE","App","_s","searchTerm","setSearchTerm","year","setYear","movies","setMovies","selectedMovie","setSelectedMovie","favorites","setFavorites","showFavorites","setShowFavorites","storedFavorites","JSON","parse","localStorage","getItem","setItem","stringify","handleSearch","e","preventDefault","url","encodeURIComponent","response","fetch","data","json","Response","Search","fetchMovieDetails","imdbID","toggleFavorite","movie","isFavorite","some","fav","filter","showFavoritesList","className","children","onShowFavorites","fileName","_jsxFileName","lineNumber","columnNumber","isFavorites","onClose","_c","$RefreshReg$"],"sources":["D:/Prak Pengweb/Gian Ivander_123140040_UTS/src/app.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport SearchForm from './components/SearchForm';\r\nimport DataTable from './components/DataTable';\r\nimport DetailCard from './components/DetailCard';\r\n\r\nconst API_KEY = 'd480045c';\r\nconst API_BASE = 'http://www.omdbapi.com/';\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showFavorites, setShowFavorites] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setFavorites(storedFavorites);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchTerm) return;\r\n\r\n    const url = `${API_BASE}?s=${encodeURIComponent(searchTerm)}&y=${year}&apikey=${API_KEY}&type=movie`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data.Response === 'True') {\r\n      setMovies(data.Search);\r\n      setShowFavorites(false);\r\n    } else {\r\n      setMovies([]);\r\n    }\r\n  };\r\n\r\n  const fetchMovieDetails = async (imdbID) => {\r\n    const url = `${API_BASE}?i=${imdbID}&apikey=${API_KEY}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setSelectedMovie(data);\r\n  };\r\n\r\n  const toggleFavorite = (movie) => {\r\n    const isFavorite = favorites.some((fav) => fav.imdbID === movie.imdbID);\r\n    if (isFavorite) {\r\n      setFavorites(favorites.filter((fav) => fav.imdbID !== movie.imdbID));\r\n    } else {\r\n      setFavorites([...favorites, movie]);\r\n    }\r\n  };\r\n\r\n  const showFavoritesList = () => {\r\n    setMovies(favorites);\r\n    setShowFavorites(true);\r\n    setSelectedMovie(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onShowFavorites={showFavoritesList} />\r\n      <SearchForm\r\n        searchTerm={searchTerm}\r\n        setSearchTerm={setSearchTerm}\r\n        year={year}\r\n        setYear={setYear}\r\n        handleSearch={handleSearch}\r\n      />\r\n      <DataTable\r\n        movies={movies}\r\n        fetchMovieDetails={fetchMovieDetails}\r\n        favorites={favorites}\r\n        toggleFavorite={toggleFavorite}\r\n        isFavorites={showFavorites}\r\n      />\r\n      {selectedMovie && (\r\n        <DetailCard\r\n          movie={selectedMovie}\r\n          onClose={() => setSelectedMovie(null)}\r\n          isFavorite={favorites.some((fav) => fav.imdbID === selectedMovie.imdbID)}\r\n          toggleFavorite={() => toggleFavorite(selectedMovie)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}